{
	"name": "kairos",
	"version": "1.0.0",
	"description": "KI-gestÃ¼tzte Aktienanalyse-CLI mit NestJS",
	"author": "KAIROS Team",
	"private": true,
	"license": "MIT",
	"bin": {
		"kairos": "./dist/main.js"
	},	"scripts": {
		"setup": "node setup.js",
		"setup-env": "node scripts/setup-env.js",
		"validate-env": "node scripts/validate-env.js",
		"cron-status": "node scripts/cron-manager.js status",
		"cron-test": "node scripts/cron-manager.js test",
		"cron-logs": "node scripts/cron-manager.js logs",
		"docker:setup": "node docker-setup.js",
		"build": "nest build",
		"format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
		"start": "nest start",
		"start:dev": "nest start --watch",
		"start:debug": "nest start --debug --watch",
		"start:prod": "node dist/main",
		"lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
		"test": "jest",
		"test:watch": "jest --watch",
		"test:cov": "jest --coverage",
		"test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
		"test:e2e": "jest --config ./test/jest-e2e.json",		"prisma:generate": "prisma generate",
		"prisma:push": "prisma db push",
		"prisma:migrate": "prisma migrate dev",
		"prisma:studio": "prisma studio",
		"db:reset": "prisma migrate reset --force",		"docker:build": "docker build -t kairos:latest .",
		"docker:build:dev": "docker build -t kairos:dev -f Dockerfile.dev .",		"docker:build:all": "npm run build && npm run docker:build && npm run docker:build:dev",
		"docker:run": "docker run -it --rm -p 3000:3000 kairos:latest",
		"docker:run:dev": "docker run -it --rm -p 3000:3000 -v ${PWD}:/app kairos:dev",
		"docker:compose:up": "docker-compose up -d",
		"docker:compose:down": "docker-compose down",
		"docker:compose:build": "docker-compose build",
		"docker:compose:rebuild": "docker-compose down && docker-compose build --no-cache && docker-compose up -d",
		"docker:clean": "docker system prune -f && docker image prune -f",
		"docker:logs": "docker-compose logs -f",
		"docker:dev:up": "docker-compose -f docker-compose.dev.yml up -d",
		"docker:dev:down": "docker-compose -f docker-compose.dev.yml down",
		"docker:dev:build": "docker-compose -f docker-compose.dev.yml build",
		"docker:dev:logs": "docker-compose -f docker-compose.dev.yml logs -f",
		"docker:services": "docker-compose up -d postgres ml-service",
		"docker:db:backup": "docker-compose exec postgres pg_dump -U kairos kairos > backup-$(date +%Y%m%d_%H%M%S).sql",
		"docker:ml:health": "curl http://localhost:8080/health",
		"docker:ml:models": "curl http://localhost:8080/models"
	},
	"dependencies": {
		"@nestjs/common": "^10.3.2",
		"@nestjs/config": "^3.2.0",
		"@nestjs/core": "^10.3.2",
		"@nestjs/platform-express": "^10.3.2",
		"@nestjs/schedule": "^4.0.1",
		"@prisma/client": "^5.10.2",
		"@tensorflow/tfjs": "^4.17.0",
		"axios": "^1.6.7",
		"axios-retry": "^4.0.0",
		"commander": "^12.0.0",
		"cron": "^3.1.6",
		"inquirer": "^9.2.15",
		"node-cron": "^3.0.3",
		"reflect-metadata": "^0.2.1",
		"rxjs": "^7.8.1",
		"technicalindicators": "^3.1.0",
		"winston": "^3.11.0"
	},
	"devDependencies": {
		"@nestjs/cli": "^10.3.2",
		"@nestjs/schematics": "^10.1.1",
		"@nestjs/testing": "^10.3.2",
		"@types/express": "^4.17.21",
		"@types/inquirer": "^9.0.7",
		"@types/jest": "^29.5.12",
		"@types/node": "^20.11.25",
		"@types/node-cron": "^3.0.11",
		"@types/supertest": "^6.0.2",
		"@typescript-eslint/eslint-plugin": "^7.1.1",
		"@typescript-eslint/parser": "^7.1.1",
		"eslint": "^8.57.0",
		"eslint-config-prettier": "^9.1.0",
		"eslint-plugin-prettier": "^5.1.3",
		"jest": "^29.7.0",
		"prettier": "^3.2.5",
		"prisma": "^5.10.2",
		"source-map-support": "^0.5.21",
		"supertest": "^6.3.4",
		"ts-jest": "^29.1.2",
		"ts-loader": "^9.5.1",
		"ts-node": "^10.9.2",
		"tsconfig-paths": "^4.2.0",
		"typescript": "^5.3.3"
	},
	"jest": {
		"moduleFileExtensions": [
			"js",
			"json",
			"ts"
		],
		"rootDir": "src",
		"testRegex": ".*\\.spec\\.ts$",
		"transform": {
			"^.+\\.(t|j)s$": "ts-jest"
		},
		"collectCoverageFrom": [
			"**/*.(t|j)s"
		],
		"coverageDirectory": "../coverage",
		"testEnvironment": "node"
	}
}